<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_weapon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weapon_damage = 1;
id_mod = -1;

muzzle_xx = 26;
muzzle_yy = 5;
muzzle_len = point_distance(sprite_xoffset, sprite_yoffset, muzzle_xx, muzzle_yy);
muzzle_ang = point_direction(sprite_xoffset, sprite_yoffset, muzzle_xx, muzzle_yy);

muzzle_mod_x = 0;
muzzle_mod_y = 0;
muzzle_len_new = 0;
muzzle_ang_new = 0;

able_to_shoot = true;

image_speed = 0;
image_index = 0;
image_yscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Able to shoot again
able_to_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Point to cursor
image_angle = point_direction(x, y, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shoot
if (able_to_shoot == false) {
    exit;
}

able_to_shoot = false;

var inst, a;

a = 0;
if (image_xscale == -1) {
    a = 180 - muzzle_ang_new * 2;
}

inst = instance_create(x + lengthdir_x(muzzle_len_new, muzzle_ang_new + a + image_angle),
                        y + lengthdir_y(muzzle_len_new, muzzle_ang_new + a + image_angle), obj_bullet);
with (inst) {
    speed = 20;
    direction = other.image_angle;
    
    if (other.image_xscale == -1)
        direction += 180;
    
    image_angle = direction;
    weapon_damage = other.weapon_damage;
}

alarm[0] = room_speed * 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculate for new muzzle position and weapon damage
id_mod = obj_inventory.inv_items[obj_inventory.slot_shield];

switch (id_mod) {
    case 0:
        weapon_damage = 3;
        muzzle_mod_x = 24;
        muzzle_mod_y = 12;
        break;
    default:
        weapon_damage = 1;
        muzzle_mod_x = 0;
        muzzle_mod_y = 0;
        break;
}


var xoff, yoff;
xoff = sprite_get_xoffset(spr_weapon_mod_muzzle);// + sprite_xoffset;
yoff = sprite_get_yoffset(spr_weapon_mod_muzzle);// + sprite_yoffset;

muzzle_len_new = point_distance(sprite_xoffset, sprite_yoffset,
                                                                muzzle_xx + muzzle_mod_x - xoff,
                                                                muzzle_yy + muzzle_mod_y - yoff);
/*
muzzle_len_new = point_distance(muzzle_mod_x + muzzle_xx - xoff, muzzle_mod_y + muzzle_yy - yoff,
                                muzzle_mod_x + muzzle_xx, muzzle_mod_y + muzzle_yy);*/
muzzle_ang_new = point_direction(sprite_xoffset, sprite_yoffset,
                                                                muzzle_xx + muzzle_mod_x - xoff,
                                                                muzzle_yy + muzzle_mod_y - yoff);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (instance_exists(obj_inventory)){
    //var id_mod = obj_inventory.inv_items[obj_inventory.slot_shield];
    if (id_mod != -1) {
        var a; a = 0;
        if (image_xscale == -1) {
            a = 180 - muzzle_ang * 2;
        }
        draw_sprite_ext(spr_weapon_mod_muzzle, id_mod, x + lengthdir_x(muzzle_len, muzzle_ang + a + image_angle),
                                                        y + lengthdir_y(muzzle_len, muzzle_ang + a + image_angle), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    }
}

with(obj_player){
    draw_sprite_ext(spr_mainhand, 0, x - 5 * sign(image_xscale), y - 5 - offset_array[image_index], sign(image_xscale), 1, 0, c_white, 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
