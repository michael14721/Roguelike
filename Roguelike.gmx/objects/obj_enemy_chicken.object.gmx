<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_chicken</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 4;
dead = false;

able_to_get_hit = true;
alarm[0] = random(2) * room_speed;
justTurned = false;
image_speed = 0;

dir_x = 0;
moving = false;
fric = 0.2;
hspd = 0;
vspd = 0;
max_vspd = 11;
grav = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset able to get hit
able_to_get_hit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy instance
instance_destroy();

if(random(100) &lt; 50){
    instance_create(x, y, obj_item_sword);
}
else{
    instance_create(x, y, obj_item_helm);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move like chicken
dir_x = 0;
moving = false;
image_speed = 0;

if (place_meeting(x + image_xscale * sprite_width, y, par_wall)) {
    image_xscale *= -1;
    justTurned = true;
} else {
    image_xscale = choose(-1, 1);
}

if (justTurned == false) {
    dir_x = choose(image_xscale, 0, 0);
} else {
    dir_x = image_xscale;
    justTurned = false;
}

if (dir_x != 0) {
    image_speed = 0.2;
    moving = true;
} else {
    image_speed = 0.02;
}

alarm[0] = 30 + random(1) * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Gravity
var grounded;
grounded = (place_meeting(x, y + 1, par_wall) || place_meeting(x, y + 1, par_wall_jt));

vspd = median(-max_vspd, max_vspd, vspd + !grounded * grav);

if (dir_x == 0) {
    hspd -= fric * sign(hspd);
} else {
    hspd = dir_x;
}

// Horizontal wall collision
repeat ceil(abs(hspd)) {
    if (!place_meeting(x + sign(hspd), y, par_wall)) {
        x += sign(hspd);
    } else {
        if (vspd == 0 &amp;&amp; grounded)
            vspd = -8 - random(4);
    }
}

// Vertical wall collision
repeat (abs(ceil(vspd))) {
    if (place_meeting(x, y + sign(vspd), par_wall)) {
        vspd = 0;
    } else {
        y += sign(vspd);
    }
}

// Death
if (hp &lt;= 0) {
    // Death animation setup
    if (dead == false) {
        image_index = 4;
        image_speed = 0.2;
        alarm[0] = 0;
        dir_x = 0;
        
        dead = true;
    }
} else {
    // Normal movement animation
    if (dir_x == 0) {
        // Idle
        if (image_index &gt;= 11) {
            image_index = 8;
        } else if (image_index &lt; 8) {
            image_index = 8;
        }
    } else {
        if (image_index &gt;= 3) {
            image_index = 0;
        }
    }
}

// Death animation
if (dead == true &amp;&amp; (image_index &gt;= 7)) {
    image_speed = 0;
    image_index = 7;
    
    if (alarm[1] &lt;= 0) {
        alarm[1] = 1 * room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_weapon">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.attacking &amp;&amp; able_to_get_hit == true) {
    var hit_text = instance_create(x, y - sprite_height * 0.5, obj_text_on_hit);
    hit_text.text = string(other.weapon_damage);
    hp -= other.weapon_damage;
    
    hspd = other.image_xscale * 5;
    vspd -= 2;
    
    alarm[2] = 11;
    able_to_get_hit = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
